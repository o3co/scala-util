
tag {
  # By default LocalTagDictionaryActor is selected.
  # If you want to use remote tag dictionary, then configure path.
  # {{{
  #   path  = "akka.tcp://host:1234/users/actor/path"
  # }}}
  # 
  # Or if you wan to use only remote dictionary, then configure store.
  # {{{
  #   store {
  #     path = "akka.tcp://host:1234/users/path/to/dictionary"
  #   }
  # }}}
  dictionary {
    store {
      type = h2mem
      dbname = tag_dictionary
    }

    # Use I18n Dictionary 
    # The default filter on tag.dictionary only provide a dictionary
    # this means translation for one key is always a term.
    # If you need difference translation pair, that means "Dictionary is differ"
    # thus, boot multi dictionary by your own.
    i18n_support = true
  }
}
sample {
  tag {
    # Configuration of TagFilters
    # {{{
    #   // Convert TagKeys to TagLabels with filter user
    #   val labels = tags.toLabelsFor("user")
    #   // Convert TagLabels to TagKeys
    #   val keys   = labels.toKeysFor("user")
    # }}}
    filters {
      # Tag for endusers 
      # Filtered tagname should be something like "user:xxxxxxxxx"
      user {
        prefix = "user:"
        dictionary = "/user/tag/dictionary"
      }
      # Tag for administrators
      # Filtered tagname should be something like "admin:xxxxxxxxx"
      admin {
        prefix = "admin:"
        dictionary = "/user/tag/dictionary"
      }
      # Or create local dictionary for tagFilter
      other {
        prefix = "other"
        dictionary {
          i18n_support = true
          store {
            type   = h2mem
            dbname = other_tag_dictionary
          }
        }
      }

      # Tag for system usage.
      # To avoid mixing user and admin tags, put "system:" on prefix 
      # system tag will never need to translate 
      system {
        prefix = "system:"
      }
    }
  }
}
